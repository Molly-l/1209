接口：能够接受请求并返回数据
‘login.js'获取微信请求头和授权code(发送给后端)
--’api.user.py‘后台接收后，将code发给微信官方
--官方返回一个openid(相当于用户信息)
--’index.js‘获取菜系(发送给后端)
--后端返回后，’index.js‘开始选择(只在前段)，设置定时器循环选一个，停时定时器销毁
--点击‘好’向后台发请求，将用户信息和美食信息发送给后端
--’choose.js‘做两个按钮分别跳转页面
--‘大吃大喝’到'map.js'(调用百度地图接口)，点击某个选项也是给百度接口发请求
--’亲自下厨‘到’cookbook.js‘(自动给后台发送请求)，获取菜单
--’api.food.py‘(将接收到的菜名放入到请求中，发给外部聚合接口，聚合接口查到菜单又返给后端，后端又转给前端)
--当点击某个菜时跳转‘cookdetail.js’页面(自动给后端发请求，携带菜谱id到后端)
--‘api.food.py’带着前端发过来菜谱id，给另一个接口发请求，聚合接口将具体菜谱返回给后端，后端再返给前端
--‘cookdetail.js’显示出菜谱
--‘addfood.js’将输入菜名和选择的菜系发送给后台，
--‘food.py’后台通过菜名菜系查找美食，如存在返回‘已存在’，不存在就将美食写入数据库返回‘成功’
--‘pie.js’自动向后台发送请求(携带用户信息)
--‘record.py'根据id查找出所有选菜记录，将记录返给前端
--’pie.js‘调用一个绘图方法，清空数据按钮(也是给后端发请求)
--’record.py‘根据用户id删除所有选菜记录
--到’sucsse.wxml‘，跳转首页’index.js‘
js控制逻辑，接收发送请求和动画效果
html写标签写页面
css样式
.json存静态数据
wxml对应html页面

